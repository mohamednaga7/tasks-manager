// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(cuid())
  firstName        String
  lastName         String
  email            String          @unique
  username         String          @unique
  password         String
  createdTickets   Ticket[]        @relation("author")
  assignedTickets  Ticket[]        @relation("assigned")
  updatedTickets   Ticket[]        @relation("lastUpdatedByUser")
  ticketActivities TicketHistory[] @relation("updatingUser")
}

model Ticket {
  id                  String          @id @default(cuid())
  title               String
  description         String
  status              TicketStatus    @default(TODO)
  authorId            String
  author              User            @relation("author", fields: [authorId], references: [id])
  assignedUserId      String?
  assignedUser        User?           @relation("assigned", fields: [assignedUserId], references: [id])
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  lastUpdatedByUserId String?
  lastUpdatedByUser   User?           @relation("lastUpdatedByUser", fields: [lastUpdatedByUserId], references: [id])
  closedAt            DateTime?
  updates             TicketHistory[]
}

model TicketHistory {
  id             String   @id @default(cuid())
  ticketId       String
  ticket         Ticket   @relation(fields: [ticketId], references: [id])
  updatingUserId String
  updatingUser   User     @relation("updatingUser", fields: [updatingUserId], references: [id])
  message        String
  createdAt      DateTime @default(now())
}

enum TicketStatus {
  TODO
  IN_PROGRESS
  BLOCKED
  IN_QA
  DONE
  DEPLOYED
}
